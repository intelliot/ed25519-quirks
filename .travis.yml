dist: xenial
addons:
  firefox: latest
  chrome: stable
branches:
  only:
    - master
    # tags
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

cache:
  directories:
    - wasm/target
    - $HOME/.cargo

language: rust
rust: 1.37.0

env:
  global:
    - BINARYEN_VER=version_89

before_install:
  # Install Node
  - nvm install --lts 10 && nvm use 10
  # Install Rust components
  - rustup component add rustfmt-preview
  - rustfmt -V
  - rustup component add clippy-preview
  - cargo clippy -V
  # Install WASM toolchain
  - rustup target add wasm32-unknown-unknown
  - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
  - |
    wget -q "https://github.com/WebAssembly/binaryen/releases/download/$BINARYEN_VER/binaryen-$BINARYEN_VER-x86_64-linux.tar.gz" -O binaryen.tar.gz
    tar -xf binaryen.tar.gz "binaryen-$BINARYEN_VER/wasm-opt"
    mkdir -p ~/.local/bin
    export PATH="$PATH:$HOME/.local/bin"
    mv "binaryen-$BINARYEN_VER/wasm-opt" ~/.local/bin
    rm -rf "binaryen-$BINARYEN_VER" binaryen.tar.gz

install:
  - npm ci

script:
  # Rust-related checks
  - npm run lint-wasm:fmt
  - npm run lint-wasm:clippy
  - npm run test-wasm -- --firefox
  # Front-end checks (`npm run build` should be the first one, it builds WASM)
  - npm run build-opt
  - npm run lint-web
  - npm test

before_deploy:
  - WEBPACK_PUBLIC_PATH=/ed25519-quirks/ npm run build-web
deploy:
  provider: pages
  skip_cleanup: true
  local_dir: dist
  github_token: $GITHUB_TOKEN
  on:
    branch: master
